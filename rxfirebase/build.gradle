buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.novoda:bintray-release:0.3.4'
  }
}

apply plugin: 'com.android.library'
apply from: 'buildsystem/dependencies.gradle'
apply from: 'buildsystem/version.gradle'
apply plugin: 'com.novoda.bintray-release'
apply from: 'buildsystem/publish.gradle'

android {

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE-FIREBASE.txt'
    exclude 'META-INF/NOTICE'
  }

  def globalConfiguration = project.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
    versionCode globalConfiguration.getAt("versionCode")
    versionName globalConfiguration.getAt("versionName")
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }


  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

tasks.withType(Test) {
  testLogging {
    events "started", "passed", "skipped", "failed"
  }
}

dependencies {
  def libraryDependencies = project.ext.libraryDependencies
  def libraryTestDependencies = project.ext.libraryTestDependencies

  //Data
  compile libraryDependencies.firebaseDatabase
  compile libraryDependencies.firebaseAuth

  //Rx
  compile libraryDependencies.rxJava

  testCompile libraryTestDependencies.mockito
  testCompile libraryTestDependencies.junit
  testCompile libraryTestDependencies.robolectric
  testCompile libraryTestDependencies.assertj
}
